<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAgAwAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnJyclJCQlISEjIB8jIiImJycqKSkp
        JSQiHx0jISAnJycvLy8yMC8tKSgqJiYnJyYoKCcpKCgpJiUnJCInJiUsLS0uLi4kISEdGhggHRwiIiIh
        ISEhHx8fGxobGRcbGxk+PTw+QEE+TVE9T1Q+R0hDQUBFQkE+SUw7S1A8SU5DRUVKR0VJS01ATlJBUlZB
        SEhDQUBFQ0JATFBDVFhPW15bWlpSUE86QUQvP0QzRUk2Ozw5NjY5ODg0Q0cyREkzP0I6QUMxjaUyrc43
        kqo+REU/NTM6bXoyqMg4qslHb3lRRkNLWVw4nbgvqMg7h5tLSEdGPz0/fo84sM1Aq8dYbXNlWFVXcXg0
        ob8oo8QwcYI9NzVAPj42h50xq8wxlK84RUkUGBoSMDkTNT4VKCwVFBMVFBQVKi8VNz8YNDwgJCUeGxoU
        HB4WNT0fP0csOj4xLCssLCwpQEYkRUwVLzUWFhYgHRshLC8XN0AOLzgSHR8ZFBQYGxsWMTkUNT8SKC4T
        EhEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICQlOTk2ZlpSyrKiuqKKvrKa0sqy4s6+2sq+H
        hII4NzcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAA/Pz+trazR0dCamphncn1FXnxIZYpHXXlpdH+Mi4jEw8DO0M6VlpUsLSwAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmZ2fl5eTFxcQ+Pj0AAAA5ZJQ9heEz
        eNIzeNNLiNNPeqlRXmmkpKLT1NLAwcBTU1MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        5eXt7e3Q0NBaWloAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAApKSqOjYzX09Hz7u3z8O/x8fLx8fHy7+7s5+bIxMN4d3cWFxcAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAUGRsTMDkUNT0VJywVFBMVFBUVKzAVNz8YNDwgJCUaFhYSGx0oRk9PbXZcam5d
        WlhYWVhbcnhObnUjPEESEhMbGBchLDAXN0AOLzcSHR8ZFRQZHBwWMTkVNT4SKC4TEhE6REYzkas0sdM5
        lK1ARUY/NzQ8cYA1rs46sM9LcXxUSUZNXWE3oLwqpsc3hJhHQ0FCPDg5fI40rs1Brspab3VnWldadXw2
        psUqp8gyc4NBOTZCQkE4jaMzsdEzl7M5Rkk9PDs+QkM+T1Q9UVc+R0lCQD9EQEA9Sk86TlQ8S09DRENI
        RUNFTE49UFVAUlhCR0lDQD9EQ0M/TlNDVlxQXGFbW1tST085Q0UuQkgyRkw2OTs5NjU4Ojo0RUoyR00z
        QEM4OTg2NDQ2MTEzLy40MzI4ODg9PDs6NzUyLi00MjI6OjlERENIRURBPjw9Ojg5OTc5Ojk8Ozo9Ojg4
        NTQ4NzZAQEBDQ0M1MzIqJyYvLCwzMjIwMDEwLS0tKScoJiUoJycLCwsKCgoKCgoKCgoKCgoLCwoMDAwL
        CwsKCQkLCwsMDAwNDQ0ODg4ODQ0MDAwMCwsKCgoMDAwNDQ0LCwsKCgoLCwsNDQ0LCwsICAgKCgoLCwsJ
        CQkJCQkJCQkICAgICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>